{"ast":null,"code":"var _jsxFileName = \"/Users/stefano/Desktop/Progra3/ProyectoProgra3/src/pages/NowPlayingGeneral.js\";\nimport NowPlaying from '../components/NowPlaying./NowPlaying';\nimport SearchForm from '../components/SearchForm/SearchForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NowPlayingGeneral = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NowPlaying, {\n        limit: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = NowPlayingGeneral;\nexport default NowPlayingGeneral;\nvar _c;\n$RefreshReg$(_c, \"NowPlayingGeneral\");","map":{"version":3,"names":["NowPlaying","SearchForm","jsxDEV","_jsxDEV","Fragment","_Fragment","NowPlayingGeneral","props","children","fileName","_jsxFileName","lineNumber","columnNumber","history","limit","_c","$RefreshReg$"],"sources":["/Users/stefano/Desktop/Progra3/ProyectoProgra3/src/pages/NowPlayingGeneral.js"],"sourcesContent":["import NowPlaying from '../components/NowPlaying./NowPlaying';\nimport SearchForm from '../components/SearchForm/SearchForm';\nconst NowPlayingGeneral = (props)=>{\n    return(\n        <>\n            <h1>Now Playing</h1>\n            <section>\n                <SearchForm history={this.props.history}/>\n                <NowPlaying limit = {20}/>\n            </section>\n        </>\n\n    )\n}\nexport default NowPlayingGeneral;"],"mappings":";AAAA,OAAOA,UAAU,MAAM,sCAAsC;AAC7D,OAAOC,UAAU,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC7D,MAAMC,iBAAiB,GAAIC,KAAK,IAAG;EAC/B,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACIL,OAAA;MAAAK,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBT,OAAA;MAAAK,QAAA,gBACIL,OAAA,CAACF,UAAU;QAACY,OAAO,EAAE,IAAI,CAACN,KAAK,CAACM;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1CT,OAAA,CAACH,UAAU;QAACc,KAAK,EAAI;MAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA,eACZ,CAAC;AAGX,CAAC;AAAAG,EAAA,GAXKT,iBAAiB;AAYvB,eAAeA,iBAAiB;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}